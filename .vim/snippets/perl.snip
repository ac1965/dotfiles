# vim:set ft=snippet noet:
snippet pl
	#!/usr/bin/env perl

	use strict;
	use warnings;
alias shebang

snippet use
	use ${1:Package};

snippet uselib
	use lib 'lib', glob "${1:Package}";

snippet ddd
	require Data::Dumper;
	sub p ($) { warn Data::Dumper->new(\@_)->Useqq(1)->Terse(1)->Dump(); }
	${1}

snippet     sub_self
options     head
	sub ${1:method} {
		my ($self${2:#:rest args}) = @_;
		${3:# body}
	}

snippet     sub_class
options     head
	sub ${1:method} {
		my ($class${2:#:rest args}) = @_;
		${3:#:# body}
	}

snippet     package
options     head
	package ${1:`substitute(substitute(expand('%:p:r'), '.*/lib/', '', 'g'), '/', '::', 'g')`};

	use strict;
	use warnings;

	${2:#:body}

	1;

snippet     package_block
options     head
	package ${1:`substitute(substitute(expand('%:p:r'), '.*/lib/', '', 'g'), '/', '::', 'g')`} {
		${2:#:body}
	}

snippet     t
options     head
	package ${1:`substitute(substitute(expand('%:p:r'), '.*/t/', 't-', 'g'), '-', '::', 'g')`};

	sub _require : Test(startup => 1) {
		require_ok '${2:`substitute(substitute(expand('%:p:r'), '.*/t/', '', 'g'), '-', '::', 'g')`}';
	}

	${2:#:# body}

	1;

snippet     subtest
	subtest ${1:test_name} => sub {
		${2:#:body}
	};

snippet     tests
	sub ${1:test_name} : Tests {
		${2:#:body}
	}

snippet todo_test
	TODO: {
		local $TODO = '${1:reason}';
		fail '$1';
	};
